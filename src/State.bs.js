// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");

function playerToString(player) {
  if (player) {
    return "O";
  } else {
    return "X";
  }
}

function optionalPlayerToString(player) {
  if (player !== undefined) {
    if (player) {
      return "O";
    } else {
      return "X";
    }
  } else {
    return " ";
  }
}

function addGridToRow(boxes) {
  return $$Array.fold_left((function (a, b) {
                return a + ("|" + b);
              }), "", boxes) + "|";
}

function stateAsString(state) {
  var row1 = addGridToRow(/* array */[
        optionalPlayerToString(state[/* topLeft */2]),
        optionalPlayerToString(state[/* topMiddle */3]),
        optionalPlayerToString(state[/* topRight */4])
      ]);
  var row2 = addGridToRow(/* array */[
        optionalPlayerToString(state[/* middleLeft */5]),
        optionalPlayerToString(state[/* middleMiddle */6]),
        optionalPlayerToString(state[/* middleRight */7])
      ]);
  var row3 = addGridToRow(/* array */[
        optionalPlayerToString(state[/* bottomLeft */8]),
        optionalPlayerToString(state[/* bottomMiddle */9]),
        optionalPlayerToString(state[/* bottomRight */10])
      ]);
  var rows = /* array */[
    row1,
    row2,
    row3
  ];
  return $$Array.fold_right((function (a, b) {
                return a + ("\n" + b);
              }), rows, "");
}

exports.playerToString = playerToString;
exports.optionalPlayerToString = optionalPlayerToString;
exports.addGridToRow = addGridToRow;
exports.stateAsString = stateAsString;
/* No side effect */
